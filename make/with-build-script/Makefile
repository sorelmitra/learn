# Create a build directory, cd to it and run:
# make -f ../Makefile

# Want to have sources in "src", separated from the build directory.
VPATH = ../src

# This is for Google Protocol Buffers (GPB), that reads a .proto file
# and generates .c and .h for use in a C program.
# The idea of this makefile is that it demonstrates both VPATH with
# separated sources and build directory, and dependency of your own
# written code from a generated code. See other comments below.
PROTOC = protoc-c
PROTOC_FLAGS = -I $(VPATH) --c_out=.

# In this setup, GPB generates the sources in build directory,
# we need to have the build directory in C include path.
CFLAGS += -I .

all: write_msg read_msg

# Pattern rule to generate C sources from GPB proto source
%.pb-c.h %.pb-c.c: %.proto
	$(PROTOC) $(PROTOC_FLAGS) $?

OBJ_GPB = addressbook.pb-c.o

OBJ_WRITE = write_msg.o

OBJ_READ = read_msg.o

OBJ_OURS = $(OBJ_WRITE) $(OBJ_READ)

# Our C sources must be recompiled after changing the .proto file,
# as they use the code generated by GPB from the .proto file.
# Here we specify that the GPB generated code must be created before
# compiling our code by adding a plain dependency.
$(OBJ_OURS): $(OBJ_GPB)

write_msg: $(OBJ_WRITE) $(OBJ_GPB) -lprotobuf-c

read_msg: $(OBJ_READ) $(OBJ_GPB) -lprotobuf-c

clean:
	rm -fv *.pb-c.* *.o *.d *.a write_msg read_msg

