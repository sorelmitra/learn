// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process

{
    "version": "0.1.0",
    "command": "make",
    "isShellCommand": true
}

// A task runner example that defines a problemMatcher inline instead of using
// a predefined one.
/*
{
	"version": "0.1.0",
	"command": "tsc",
	"isShellCommand": true,
	"args": ["HelloWorld.ts"],
	"showOutput": "silent",
	"problemMatcher": {
		// The problem is owned by the typescript language service. Ensure that the problems
		// are merged with problems produced by Visual Studio's language service.
		"owner": "typescript",
		// The file name for reported problems is relative to the current working directory.
		"fileLocation": ["relative", "${cwd}"],
		// The actual pattern to match problems in the output.
		"pattern": {
			// The regular expression. Matches HelloWorld.ts(2,10): error TS2339: Property 'logg' does not exist on type 'Console'.
			"regexp": "^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(TS\\d+)\\s*:\\s*(.*)$",
			// The match group that denotes the file containing the problem.
			"file": 1,
			// The match group that denotes the problem location.
			"location": 2,
			// The match group that denotes the problem's severity. Can be omitted.
			"severity": 3,
			// The match group that denotes the problem code. Can be omitted.
			"code": 4,
			// The match group that denotes the problem's message.
			"message": 5
		}
	}
}
*/