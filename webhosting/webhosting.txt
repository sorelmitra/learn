
Free DDNS

Dynamic DNS = used to bind a DNS name to a changing IP

- https://www.duckdns.org/

---

Hosting static website options:

All below support custom domain.

1) GitHub
- PRO: Free
- PRO: Simple
- PRO: HTTPS out-of-the-box
- PRO: Supports automatic uploading via GIT
- CON: Your site will be open-source

2) AWS
Tutorial: https://www.freecodecamp.org/news/a-beginners-guide-on-how-to-host-a-static-site-with-aws/
- PRO: Your site is closed-source
- PRO: Can handle all storage with S3
- PRO: Cheap, estimated at 1-3$ / month
- CON: Paid, albeit cheap
- CON: Complex to setup, including HTTPS

3) Neocities
- PRO: Free
- PRO: HTTPS out-of-the-box
- CON: No automatic uploading, only drag-and-drop

More options:
https://alignedleft.com/resources/cheap-web-hosting

---

Other hosting solutions:

Host an app with zero cost, in a cloud-independent way https://blog.dahl.dev/posts/stringing-together-several-free-tiers-to-host-an-application-with-zero-cost/

My Ultimate Self-hosting Setup
https://codecaptured.com/blog/my-ultimate-self-hosting-setup/

---

AWS Pricing

AWS API Gateway
https://aws.amazon.com/api-gateway/pricing/

AWS Lambda
https://aws.amazon.com/lambda/pricing/

---

Homepage design tips:

search "how to create a web site to present yourself"

https://collegeinfogeek.com/personal-website/

https://www.hostgator.com/web-hosting

Sample homepages
https://thomasjfrank.com
http://annaellenberger.com


---

More homepage tips:

https://skillcrush.com/2013/03/25/the-five-essential-ingredients-of-a-great-online-portfolio/

https://www.crazyegg.com/blog/grab-attention-website-home-page-introduction/

https://hackernoon.com/how-to-make-a-cool-introduction-webpage-for-yourself-easily-177f0b7fe1e3

https://hackernoon.com/how-to-make-a-cool-introduction-webpage-for-yourself-easily-177f0b7fe1e3

---

Technical Articles related to Homepage

AWS Lambda Usage
https://docs.aws.amazon.com/lambda/latest/dg/with-userapp.html

API Gateway Usage
https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-usage-plans.html

Lambda Proxy
https://stackoverflow.com/questions/43190935/setting-http-response-header-from-aws-lambda

Sending an HTML Email
https://stackabuse.com/how-to-send-emails-with-node-js/

MailTrap - SMTP email server for testing
https://mailtrap.io/inboxes/687073/messages

Nodemailer - Sending emails from Node.JS
https://nodemailer.com/smtp/

Bcrypt - Safely store sensitive data in Node.JS
https://www.npmjs.com/package/bcrypt

---

Securing the contact form

- Storing any secret in a Web App (or Mobile App for that matter) is not safe as anyone can get the secret fairly easily, by inspecting the Web App sources or by capturing the HTTPS traffic as explained in this article: https://developer.okta.com/blog/2019/01/22/oauth-api-keys-arent-safe-in-mobile-apps

- The article mentioned above suggests OAuth + PKCE to solve this problem, but this only works for more involved use cases. In the simple case of a contact form, I don't want to hassle the visitor with complicated logins

- One option would be to only allow my domain to send requests to that Lambda. I'm hoping the event field requestContext.identity.sourceIp will help

- Some other tips on security: https://restfulapi.net/security-essentials/

- Spam prevention tips: https://www.lifewire.com/solutions-to-protect-web-forms-from-spam-3467469

---

CORS

- How CORS works: https://javascript.info/fetch-crossorigin, https://dev.to/effingkay/cors-preflighted-requests--options-method-3024

- CORS and AWS API Gateway: https://chrislarson.me/blog/tutorial/lambda/2017/03/10/cors-api-gateway-lambda.html

- Any change you do in AWS API Gateway does not take place until you go to Amazon API Gateway -> <name>-API -> Resources -> Actions -> Deploy API ...

So to make CORS work with my domain https://sorelmitra.github.io, I had to:

1. Add CORS from AWS API Gateway "Actions"

2. Add Header Access-Control-Allow-Origin: 'https://sorelmitra.github.io' to the GET method of my API

3. I also added Content-Type header to both the GET method of my AWS API Gateway and to the fetch() method of my JS, but I believe this was not part of the problem

---

Source Code

Some code that might prove useful:

function setupModal(modalParentId, modalOpenButtonId) {
	let modalRootId = "id-modal-root";
	let modalCloseButtonId = "id-modal-close-button";
	createModalElements(modalParentId, modalRootId, modalCloseButtonId, "modal-test");
	let createdButton = false;
	if (modalOpenButtonId == null) {
		modalOpenButtonId = "id-test-modal-open-button";
		$(`#${modalParentId}`).append(
			$('<button/>', {
				id: modalOpenButtonId,
			}).text("Open Modal"),
		);
		createdButton = true;
	}

	// Get the modal
	var modal = document.getElementById(modalRootId);
	// Get the button that opens the modal
	var btn = document.getElementById(modalOpenButtonId);
	// Get the <span> element that closes the modal
	var span = document.getElementById(modalCloseButtonId);

	// When the user clicks the button, open the modal 
	if (createdButton) {
		btn.onclick = function() {
			parseAndRenderMarkDown();
			modal.style.display = "block";
		}

		// When the user clicks on <span> (x), close the modal
		span.onclick = function() {
			modal.style.display = "none";
		}

		// When the user clicks anywhere outside of the modal, close it
		window.onclick = function(event) {
			if (event.target == modal) {
				modal.style.display = "none";
			}
		}
	}
}

function parseAndRenderMarkDown() {
	let inputLines = [
		"# XML Editor (2000 - 2003)",
		"![proj-xml-editor-tags](https://live.staticflickr.com/65535/48684258552_7013a3ca12_c.jpg)",
		"- **Ce face**: Permite editarea fișierelor XML mari în mod grafic, balizele XML fiind tratate ca blocuri. Atributele se editează într-o fereastră separată. Afișează structura DOM într-un arbore. Oferă asistență la corectarea fișierelor cu erori de sintaxă. Încarcă repede și oferă performanță foarte bună pe fișiere foarte mari. Permite validarea și editarea conform cu un DTD.",
		"- **Rolul meu**: Concepție, dezvoltare, lider de echipă.",
		"- **Ce am învățat**: Programare Win32/MFC, UML, Extreme Programming, Refactoring, Design Patterns, Unit Testing, Automatic System Testing, UML. De asemenea, am învățat să comunic cu managerul meu.",
		"- **Unde lucram**: Softwin SRL.",
		"- **Alte elemente relevante**: Am folosit Rational Rose 2001 pentru a vedea diagrame de clase mentinute la zi cu codul sursă."

	];

	let blockWidth = $('.image-width-class').css('width');
	let modalContent = $(".modal-content");
	modalContent.empty();

	let NodeNamesMappings = {
		root: "<div></div>",
		heading1: "<h1></h1>",
		image: "<img/>",
		unorderedList: "<ul></ul>",
		listItem: "<li></li>",
		strong: "<strong></strong>",
		span: "<span></span>"
	};
	let ContentNode = function ContentNode() {
		this.name = null;
		this.text = null;
		this.children = [];
		return this;
	};
	let ImageNode = function ImageNode() {
		ContentNode.call(this);
		this.src = null;
		this.alt = null;
		this.width = null;
		return this;
	};
	ImageNode.prototype = Object.create(ContentNode.prototype);

	let root = new ContentNode();
	root.name = "root";
	let stack = [];
	stack.push(root);
	inputLines.forEach(value => {
		let found = value.match(/^#\s*(.*)/);
		if (found) {
			checkAndClose("unorderedList");
			let child = new ContentNode();
			child.name = "heading1";
			processText(child, stack, found[1]);
			root.children.push(child);
			return;
		}
		found = value.match(/^-\s*(.*)/);
		if (found) {
			let currentRoot = stack[stack.length - 1];
			if (currentRoot.name != "unorderedList") {
				let newRoot = new ContentNode();
				newRoot.name = "unorderedList";
				stack.push(newRoot);
			}
			currentRoot = stack[stack.length - 1];
			let child = new ContentNode();
			child.name = "listItem";
			processText(child, stack, found[1]);
			currentRoot.children.push(child);
		} else {
			let currentRoot = checkAndClose("unorderedList");
			let child = new ContentNode();
			child.name = "span";
			processText(child, stack, value);
			currentRoot.children.push(child);
		}
	});
	while (stack.length > 1) {
		checkAndClose(undefined);
	}

	function checkAndClose(value) {
		let currentRoot = stack[stack.length - 1];
		if (currentRoot.name == "unorderedList") {
			currentRoot = closeNode(currentRoot, stack);
		}
		return currentRoot;
	}

	function closeNode(currentRoot, stack) {
		stack.pop();
		let upperRoot = stack[stack.length - 1];
		upperRoot.children.push(currentRoot);
		return currentRoot;
	}

	function processText(child, stack, text) {
		child.text = text;
	}

	render(modalContent, root);

	function render(domNode, contentNode) {
		let domChild = $(`${NodeNamesMappings[contentNode.name]}`);
		if (contentNode.text != null) {
			domChild.text(contentNode.text);
		}
		["src", "alt", "width"].forEach(value => {
			if (contentNode[value] != undefined) {
				domChild.attr(value, contentNode[value]);
			}
		});
		contentNode.children.forEach(value => {
			render(domChild, value);
		});
		console.log("appending", domChild, "to", domNode);
		domNode.append(domChild);
	}
}

function setCookie(name,value,days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days*24*60*60*1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "")  + expires + "; path=/";
}

function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
}

function eraseCookie(name) {   
    document.cookie = name+'=; Max-Age=-99999999;';  
}

/*******************************************************
 *
 *
 *
 *  modal-test
 *
 *
 */

/* The Modal (background) */
.modal-test {
	display: none; /* Hidden by default */
	position: fixed; /* Stay in place */
	z-index: 1; /* Sit on top */
	left: 0;
	top: 0;
	width: 100%; /* Full width */
	height: 100%; /* Full height */
	overflow: auto; /* Enable scroll if needed */
	background-color: rgb(0,0,0); /* Fallback color */
	background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Box */
.modal-test-box {
	background-color: #f2f2f2;
	position: fixed;
	border: 2px solid black;
}

/* Modal Header */
.modal-test-header {
	background-color: #f2f2f2;
	border: 0px solid black;
	text-align: right;
}

/* Modal Content */
.modal-test-content {
	background-color: #f2f2f2;
	color: #212121;
	overflow-y: auto;
	border: 0px solid black;
}

/* Box Sizes */

.image-width-class {
	display: none;
	width: 700px;
}

.modal-test-box {
	width: 80%;
	height: 400px;
	left: 50%;
	top: 50%;
	margin-left: -40%;
	margin-top: -200px;
}

.modal-test-header {
	height: 40px;
}

.modal-test-content {
	margin-left: 10%;
	width: 80%;
	height: 360px;
}

@media (min-width: 769px) {
	.modal-test-box {
		width: 740px;
		left: 50%;
		margin-left: -370px;
	}
}

@media (min-width: 950px) {
	.modal-test-box {
		width: 900px;
		left: 50%;
		margin-left: -450px;
	}
}

@media (min-height: 700px) {
	.modal-test-box {
		height: 600px;
		top: 50%;
		margin-top: -300px;
	}
	.modal-test-content {
		height: 560px;
	}
}

@media (min-height: 800px) {
	.modal-test-box {
		height: 700px;
		top: 50%;
		margin-top: -350px;
	}
	.modal-test-content {
		height: 660px;
	}
}

@media (min-height: 920px) {
	.modal-test-box {
		height: 840px;
		top: 50%;
		margin-top: -420px;
	}
	.modal-test-content {
		height: 800px;
	}
}

/* The Close Button */
.modal-test-close {
	color: darkgoldenrod;
	font-family: Arial, Helvetica, sans-serif;
	font-size: 28px;
	font-weight: bold;
	margin-left: 10px;
	margin-right: 10px;
}

@keyframes modal-test-close-button-animation {
	0% {color: darkgoldenrod}
	100% {color: #000;}
}

.modal-test-close:hover,
.modal-test-close:focus {
	animation-name: modal-test-close-button-animation;
	animation-duration: 0.5s;
	animation-fill-mode: forwards;
	text-decoration: none;
	cursor: pointer;
}

.index-background {
	display: block;
	position: fixed;
	left: 0;
	right: 0;
	width: 100%;
	height: 100%;
	background-size: auto;
	z-index: -1;
	/*background-image: url("TODO");*/
	filter: blur(5px);
	-webkit-filter: blur(5px);
	background-repeat: no-repeat;
	background-attachment: fixed;
}
